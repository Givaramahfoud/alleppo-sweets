{"version":3,"sources":["Components/Home.js","Components/Shop.js","Components/About.js","Components/Contact.js","App.js","serviceWorker.js","index.js","Pics/salad.jpg"],"names":["Home","props","className","to","style","textDecoration","color","expand","href","icon","faFacebookSquare","faTwitter","faInstagram","faYoutube","Shop","useState","isOpen","setIsOpen","toggle","e","setIsOpen2","toggle2","setIsOpen3","toggle3","setIsOpen4","toggle4","setIsOpen5","toggle5","setIsOpen6","toggle6","setIsOpen7","toggle7","setIsOpen8","toggle8","setIsOpen9","toggle9","setIsOpen10","toggle10","setIsOpen11","toggle11","setIsOpen12","toggle12","setIsOpen13","toggle13","isOpen2","isOpen3","isOpen4","isOpen5","isOpen6","isOpen7","isOpen8","isOpen9","isOpen10","isOpen11","isOpen12","isOpen13","modal","setModal","toggleModal","HelwNashef","Raha","HelwArabi","Moksrat","Bzorat","Coffee","Tmr","Schocola","Mlabas","Skaker","NogaFstk","HrestAllwz","Wifers","state","onClick","src","Salad","alt","width","Collapse","map","title","CardImg","split","slice","join","Modal","ModalBody","ModalFooter","Button","CardTitle","About","Contact","Form","FormGroup","Label","for","Input","type","name","id","placeholder","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.5835e5a6.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faInstagram,\n    faTwitter,\n    faFacebookSquare,\n    faYoutube,\n} from '@fortawesome/free-brands-svg-icons';\nimport { Link } from 'react-router-dom';\n\nconst Home = (props) => {\n\n\n    return (\n\n        <div>\n            {/* Header */}\n            <div className='headers'>\n\n                <Link to=\"/\" style={{ textDecoration: 'none' }} className='navs' className='active'>Home</Link>\n\n                <Link to=\"/shop\" style={{ textDecoration: 'none' }} className='navs' >shop</Link>\n\n                <Link to=\"/about\" style={{ textDecoration: 'none' }} className='navs'>about</Link>\n\n                <Link to=\"/contact\" style={{ textDecoration: 'none' }} className='navs'>contact</Link>\n\n            </div>\n           \n                <h1 className='homeActive'>Home</h1>\n\n            {/* Footer */}\n            <div color=\"dark\" expand=\"md\" className='footer'>\n                <a href='https://www.facebook.com/'>  <FontAwesomeIcon icon={faFacebookSquare} color=\"#1777F2\" /> </a>\n                <a href='https://www.twitter.com/'>  <FontAwesomeIcon icon={faTwitter} color=\"#33a7f4\" /> </a>\n                <a href='https://www.instagram.com/'>   <FontAwesomeIcon icon={faInstagram} color=\"#CA5191\" /> </a>\n                <a href='https://www.youtube.com/'>   <FontAwesomeIcon icon={faYoutube} color=\"#e5162f\" /> </a>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React, { useState } from 'react'\nimport {\n    CardImg, CardTitle, Collapse, Button, Modal, ModalHeader, ModalBody, ModalFooter\n} from 'reactstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faInstagram,\n    faTwitter,\n    faFacebookSquare,\n    faYoutube,\n} from '@fortawesome/free-brands-svg-icons';\nimport Salad from '../Pics/salad.jpg'\nimport { Link } from 'react-router-dom';\n\n\nexport default function Shop() {\n\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = (e) => {\n        setIsOpen(!isOpen);\n        setIsOpen2(!toggle2)\n        setIsOpen3(!toggle3)\n        setIsOpen4(!toggle4)\n        setIsOpen5(!toggle5)\n        setIsOpen6(!toggle6)\n        setIsOpen7(!toggle7)\n        setIsOpen8(!toggle8)\n        setIsOpen9(!toggle9)\n        setIsOpen10(!toggle10)\n        setIsOpen11(!toggle11)\n        setIsOpen12(!toggle12)\n        setIsOpen13(!toggle13)\n    }\n\n    const [isOpen2, setIsOpen2] = useState(false);\n    const toggle2 = (e) => {\n        setIsOpen2(!isOpen2)\n        setIsOpen(!toggle)\n        setIsOpen3(!toggle3)\n        setIsOpen4(!toggle4)\n        setIsOpen5(!toggle5)\n        setIsOpen6(!toggle6)\n        setIsOpen7(!toggle7)\n        setIsOpen8(!toggle8)\n        setIsOpen9(!toggle9)\n        setIsOpen10(!toggle10)\n        setIsOpen11(!toggle11)\n        setIsOpen12(!toggle12)\n        setIsOpen13(!toggle13)\n    };\n\n    const [isOpen3, setIsOpen3] = useState(false);\n    const toggle3 = () => {\n        setIsOpen3(!isOpen3)\n        setIsOpen(!toggle)\n        setIsOpen2(!toggle2)\n        setIsOpen4(!toggle4)\n        setIsOpen5(!toggle5)\n        setIsOpen6(!toggle6)\n        setIsOpen7(!toggle7)\n        setIsOpen8(!toggle8)\n        setIsOpen9(!toggle9)\n        setIsOpen10(!toggle10)\n        setIsOpen11(!toggle11)\n        setIsOpen12(!toggle12)\n        setIsOpen13(!toggle13)\n    };\n\n    const [isOpen4, setIsOpen4] = useState(false);\n    const toggle4 = () => {\n        setIsOpen4(!isOpen4)\n        setIsOpen(!toggle)\n        setIsOpen2(!toggle2)\n        setIsOpen3(!toggle3)\n        setIsOpen5(!toggle5)\n        setIsOpen6(!toggle6)\n        setIsOpen7(!toggle7)\n        setIsOpen8(!toggle8)\n        setIsOpen9(!toggle9)\n        setIsOpen10(!toggle10)\n        setIsOpen11(!toggle11)\n        setIsOpen12(!toggle12)\n        setIsOpen13(!toggle13)\n    };\n\n    const [isOpen5, setIsOpen5] = useState(false);\n    const toggle5 = () => {\n        setIsOpen5(!isOpen5)\n        setIsOpen(!toggle)\n        setIsOpen2(!toggle2)\n        setIsOpen3(!toggle3)\n        setIsOpen4(!toggle4)\n        setIsOpen6(!toggle6)\n        setIsOpen7(!toggle7)\n        setIsOpen8(!toggle8)\n        setIsOpen9(!toggle9)\n        setIsOpen10(!toggle10)\n        setIsOpen11(!toggle11)\n        setIsOpen12(!toggle12)\n        setIsOpen13(!toggle13)\n    };\n\n    const [isOpen6, setIsOpen6] = useState(false);\n    const toggle6 = () => {\n        setIsOpen6(!isOpen6)\n        setIsOpen(!toggle)\n        setIsOpen2(!toggle2)\n        setIsOpen3(!toggle3)\n        setIsOpen4(!toggle4)\n        setIsOpen5(!toggle5)\n        setIsOpen7(!toggle7)\n        setIsOpen8(!toggle8)\n        setIsOpen9(!toggle9)\n        setIsOpen10(!toggle10)\n        setIsOpen11(!toggle11)\n        setIsOpen12(!toggle12)\n        setIsOpen13(!toggle13)\n    };\n\n    const [isOpen7, setIsOpen7] = useState(false);\n    const toggle7 = () => {\n        setIsOpen7(!isOpen7)\n        setIsOpen(!toggle)\n        setIsOpen2(!toggle2)\n        setIsOpen3(!toggle3)\n        setIsOpen4(!toggle4)\n        setIsOpen5(!toggle5)\n        setIsOpen6(!toggle6)\n        setIsOpen8(!toggle8)\n        setIsOpen9(!toggle9)\n        setIsOpen10(!toggle10)\n        setIsOpen11(!toggle11)\n        setIsOpen12(!toggle12)\n        setIsOpen13(!toggle13)\n    };\n\n    const [isOpen8, setIsOpen8] = useState(false);\n    const toggle8 = () => {\n        setIsOpen8(!isOpen8)\n        setIsOpen(!toggle)\n        setIsOpen2(!toggle2)\n        setIsOpen3(!toggle3)\n        setIsOpen4(!toggle4)\n        setIsOpen5(!toggle5)\n        setIsOpen6(!toggle6)\n        setIsOpen7(!toggle7)\n        setIsOpen9(!toggle9)\n        setIsOpen10(!toggle10)\n        setIsOpen11(!toggle11)\n        setIsOpen12(!toggle12)\n        setIsOpen13(!toggle13)\n    };\n\n    const [isOpen9, setIsOpen9] = useState(false);\n    const toggle9 = () => {\n        setIsOpen9(!isOpen9)\n        setIsOpen(!toggle)\n        setIsOpen2(!toggle2)\n        setIsOpen3(!toggle3)\n        setIsOpen4(!toggle4)\n        setIsOpen5(!toggle5)\n        setIsOpen6(!toggle6)\n        setIsOpen7(!toggle7)\n        setIsOpen8(!toggle8)\n        setIsOpen10(!toggle10)\n        setIsOpen11(!toggle11)\n        setIsOpen12(!toggle12)\n        setIsOpen13(!toggle13)\n    };\n\n    const [isOpen10, setIsOpen10] = useState(false);\n    const toggle10 = () => {\n        setIsOpen10(!isOpen10)\n        setIsOpen(!toggle)\n        setIsOpen2(!toggle2)\n        setIsOpen3(!toggle3)\n        setIsOpen4(!toggle4)\n        setIsOpen5(!toggle5)\n        setIsOpen6(!toggle6)\n        setIsOpen7(!toggle7)\n        setIsOpen8(!toggle8)\n        setIsOpen9(!toggle9)\n        setIsOpen11(!toggle11)\n        setIsOpen12(!toggle12)\n        setIsOpen13(!toggle13)\n    };\n\n\n\n    const [isOpen11, setIsOpen11] = useState(false);\n    const toggle11 = () => {\n        setIsOpen11(!isOpen11)\n        setIsOpen(!toggle)\n        setIsOpen2(!toggle2)\n        setIsOpen3(!toggle3)\n        setIsOpen4(!toggle4)\n        setIsOpen5(!toggle5)\n        setIsOpen6(!toggle6)\n        setIsOpen7(!toggle7)\n        setIsOpen8(!toggle8)\n        setIsOpen9(!toggle9)\n        setIsOpen10(!toggle10)\n        setIsOpen12(!toggle12)\n        setIsOpen13(!toggle13)\n    };\n\n    const [isOpen12, setIsOpen12] = useState(false);\n    const toggle12 = () => {\n        setIsOpen12(!isOpen12)\n        setIsOpen(!toggle)\n        setIsOpen2(!toggle2)\n        setIsOpen3(!toggle3)\n        setIsOpen4(!toggle4)\n        setIsOpen5(!toggle5)\n        setIsOpen6(!toggle6)\n        setIsOpen7(!toggle7)\n        setIsOpen8(!toggle8)\n        setIsOpen9(!toggle9)\n        setIsOpen10(!toggle10)\n        setIsOpen11(!toggle11)\n        setIsOpen13(!toggle13)\n    };\n\n    const [isOpen13, setIsOpen13] = useState(false);\n    const toggle13 = () => {\n        setIsOpen13(!isOpen13)\n        setIsOpen(!toggle)\n        setIsOpen2(!toggle2)\n        setIsOpen3(!toggle3)\n        setIsOpen4(!toggle4)\n        setIsOpen5(!toggle5)\n        setIsOpen6(!toggle6)\n        setIsOpen7(!toggle7)\n        setIsOpen8(!toggle8)\n        setIsOpen9(!toggle9)\n        setIsOpen10(!toggle10)\n        setIsOpen11(!toggle11)\n        setIsOpen12(!toggle12)\n    };\n\n    const [modal, setModal] = useState(false);\n\n    const toggleModal = () => setModal(!modal);\n\n\n    const [state] = useState({\n\n        HelwNashef: [\n            'معمول تمر',\n            'معمول جوز',\n            'معمول فستق',\n            'سنيورة غريبة',\n            'بيتي فور',\n        ],\n\n        Raha: [\n            'أصابع',\n            'جوز الهند',\n            'شوكولا',\n            'قروش',\n            'ليرات',\n            'مبرومة',\n            'مثلثات',\n            'ملوكية حزوز',\n            'ملوكية مبرومة',\n            'ملوكية مستطيل',\n            'ورود'\n        ],\n\n        HelwArabi: [\n            'مشكل',\n            'هريسة نبكية',\n            'مبرومة',\n            'بلورية'\n        ],\n\n        Moksrat: [\n            'فستق حلبي',\n            'فستق حلبي مدخن',\n            'لوز',\n            'لوز مدخن',\n            'كاجو',\n            'كاجو مدخن',\n            'تخليطة ديلوكس بزر',\n            'تخليطة ديلوكس مدخن',\n            'تخليطة',\n            'تخليطة مدخن',\n            'تخليطة صينية'\n        ],\n\n        Bzorat: [\n            'أبيض قرع',\n            'بطيخ أسود',\n            'بطيخ مسلوق',\n            'دوار الشمس',\n            'مصري'\n        ],\n\n        Coffee: [\n            'بدون هال',\n            'مع هال',\n            'هال اكسترا'\n        ],\n\n        Tmr: [\n            'تمر',\n            'تمر بالشوكولا'\n        ],\n\n        Schocola: [\n            'فيريرو',\n            'محشوة شوكولا بندق',\n            'محشوة شوكولا سائلة',\n            'محشوة فستق دوائر',\n            'محشوة فستق مربع',\n            'محشية لوز',\n            'محشية نستلة',\n            'محشية نسكافيه',\n            'مرّة',\n            'شوكولا ساده',\n            'شوكولا مرّة'\n        ],\n\n        Mlabas: [\n            'ملبس لوز',\n            'شوكولا بايبي'\n        ],\n\n        Skaker: [\n            'كاراميلا',\n            'سميري',\n            'قضامة بسكر',\n            'شوكولا محجرة'\n        ],\n\n        NogaFstk: [''],\n\n        HrestAllwz: [\n            'ببرونة أزرق',\n            'ببرونة زهر',\n            'فراشة',\n            'فواكة',\n            'ملوكية',\n            'ورد أبيض',\n            'ورد أحمر',\n            'ورد أزرق',\n            'ورد زهر'\n        ],\n\n        Wifers: [\n            'شوكولا ساده',\n            'شوكولا مرّة'\n        ]\n\n    })\n\n\n    return (\n        <div>\n            {/* Header */}\n            <div className=' headers '>\n\n                <Link to=\"/\" style={{ textDecoration: 'none' }} className='navs'>Home</Link>\n\n                <Link to=\"/shop\" style={{ textDecoration: 'none' }} className='navs' className='active'>shop</Link>\n\n                <Link to=\"/about\" style={{ textDecoration: 'none' }} className='navs'>about</Link>\n\n                <Link to=\"/contact\" style={{ textDecoration: 'none' }} className='navs'>contact</Link>\n\n            </div>\n\n            {/* the container of the Cards */}\n            <div className='container'>\n                <section className='cardDeck'>\n\n                    <div className={isOpen ? 'open' : 'cards'} >\n                        <button onClick={toggle} className='btns'>\n\n                            <img src={Salad} alt=\"Card image cap\" width='200px' className='imgSize' />\n\n                            <p className='titles'>حلو ناشف</p>\n                        </button>\n\n                        <Collapse isOpen={isOpen}>\n                            <div className='openSlide'>\n                                {state.HelwNashef.map(title => (\n                                    <div className='cardStyle'>\n                                        <button className='btns' onClick={toggleModal}>\n                                            <CardImg src={Salad} alt=\"Card image cap\" width='50%' />\n                                            <p className='CardTitle' >{title.split(\" \").slice(0, 4).join(\" \")}</p>\n                                        </button>\n                                        <Modal isOpen={modal} toggleModal={toggleModal}  className='container'>\n                                            <ModalBody>\n                                                <CardImg src={Salad} alt=\"Card image cap\" width='50%' />\n                                            </ModalBody>\n                                            <ModalFooter className='popup' >\n                                                <div className='popupCards'  onClick={toggleModal}>\n                                                    <CardImg src={Salad} alt=\"Card image cap\" width='50%' />\n                                                    <CardImg src={Salad} alt=\"Card image cap\" width='50%' />\n                                                    <CardImg src={Salad} alt=\"Card image cap\" width='50%' />\n                                                </div>\n\n                                            </ModalFooter>\n                                            <Button color=\"light\" onClick={toggleModal}>Cancel</Button>\n                                        </Modal>\n                                    </div>\n                                ))}\n                            </div>\n                        </Collapse>\n\n                    </div>\n\n                    <div className={isOpen2 ? 'open' : 'cards'}>\n\n                        <button onClick={toggle2} className='btns'>\n                            <img src={Salad} alt=\"Card image cap\" width='200px' className='imgSize' />\n\n                            <p className='titles'>راحة</p>\n                        </button>\n\n                        <Collapse isOpen={isOpen2} >\n\n                            <div className='openSlide2'>\n\n                                {state.Raha.map(title => (\n                                    <div className='cardStyle2'>\n                                        <button className='btns' >\n                                            <CardImg src={Salad} alt=\"Card image cap\" width='50%' />\n                                            <p className='CardTitle' >{title.split(\" \").slice(0, 4).join(\" \")}</p>\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </Collapse>\n                    </div>\n\n                    <div className={isOpen3 ? 'open' : 'cards'}>\n\n                        <button onClick={toggle3} className='btns'>\n                            <img src={Salad} alt=\"Card image cap\" width='200px' className='imgSize' />\n\n                            <p className='titles'>حلو عربي</p>\n                        </button>\n\n                        <Collapse isOpen={isOpen3} >\n\n                            <div className='openSlide3'>\n\n                                {state.HelwArabi.map(title => (\n                                    <div className='cardStyle3'>\n                                        <button className='btns' >\n                                            <CardImg src={Salad} alt=\"Card image cap\" />\n                                            <CardTitle className='CardTitle' >{title.split(\" \").slice(0, 4).join(\" \")}</CardTitle>\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </Collapse>\n                    </div>\n\n                    <div className={isOpen4 ? 'open' : 'cards'}>\n                        <button onClick={toggle4} className='btns'>\n                            <img src={Salad} alt=\"Card image cap\" width='200px' className='imgSize' />\n\n                            <p className='titles'>مكسرات</p>\n                        </button>\n\n                        <Collapse isOpen={isOpen4} >\n\n                            <div className='openSlide4'>\n\n                                {state.Moksrat.map(title => (\n                                    <div className='cardStyle4'>\n                                        <button className='btns' >\n                                            <CardImg src={Salad} alt=\"Card image cap\" />\n                                            <CardTitle className='CardTitle' >{title.split(\" \").slice(0, 4).join(\" \")}</CardTitle>\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </Collapse>\n                    </div>\n\n                    <div className={isOpen5 ? 'open' : 'cards'}>\n                        <button onClick={toggle5} className='btns'>\n                            <img src={Salad} alt=\"Card image cap\" width='200px' className='imgSize' />\n\n                            <p className='titles'>بذورات</p>\n                        </button>\n\n                        <Collapse isOpen={isOpen5}>\n                            <div className='openSlideBzorat' >\n                                {state.Bzorat.map(title => (\n                                    <div className='cardStyleBzorat'>\n                                        <button className='btns' >\n                                            <CardImg src={Salad} alt=\"Card image cap\" />\n                                            <CardTitle className='CardTitle' >{title.split(\" \").slice(0, 4).join(\" \")}</CardTitle>\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </Collapse>\n                    </div>\n\n                    <div className={isOpen6 ? 'open' : 'cards'}>\n                        <button onClick={toggle6} className='btns'>\n\n                            <img src={Salad} alt=\"Card image cap\" width='200px' className='imgSize' />\n\n                            <p className='titles'>قهوة</p>\n                        </button>\n\n                        <Collapse isOpen={isOpen6}>\n\n                            <div className='openSlide2' >\n\n                                {state.Coffee.map(title => (\n                                    <div className='cardStyle'>\n                                        <button className='btns' >\n                                            <CardImg src={Salad} alt=\"Card image cap\" />\n                                            <CardTitle className='CardTitle' >{title.split(\" \").slice(0, 4).join(\" \")}</CardTitle>\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </Collapse>\n                    </div>\n\n                    <div className={isOpen7 ? 'open' : 'cards'}>\n                        <button onClick={toggle7} className='btns'>\n                            <img src={Salad} alt=\"Card image cap\" width='200px' className='imgSize' />\n\n                            <p className='titles'>تمر</p>\n                        </button>\n\n                        <Collapse isOpen={isOpen7}>\n\n                            <div className='openSlideTmr' >\n\n                                {state.Tmr.map(title => (\n                                    <div className='cardStyleTmr'>\n                                        <button className='btns' >\n                                            <CardImg src={Salad} alt=\"Card image cap\" />\n                                            <CardTitle className='CardTitle' >{title.split(\" \").slice(0, 4).join(\" \")}</CardTitle>\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </Collapse>\n                    </div>\n\n                    <div className={isOpen8 ? 'open' : 'cards'}>\n                        <button onClick={toggle8} className='btns'>\n                            <img src={Salad} alt=\"Card image cap\" width='200px' className='imgSize' />\n\n                            <p className='titles'>شوكولا</p>\n                        </button>\n\n                        <Collapse isOpen={isOpen8}>\n\n                            <div className='openSlide4' >\n\n                                {state.Schocola.map(title => (\n                                    <div className='cardStyle4'>\n                                        <button className='btns' >\n                                            <CardImg src={Salad} alt=\"Card image cap\" />\n                                            <CardTitle className='CardTitle' >{title.split(\" \").slice(0, 4).join(\" \")}</CardTitle>\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </Collapse>\n                    </div>\n\n                    <div className={isOpen9 ? 'open' : 'cards'}>\n                        <button onClick={toggle9} className='btns'>\n                            <img src={Salad} alt=\"Card image cap\" width='200px' className='imgSize' />\n\n                            <p className='titles'>ملبس</p>\n                        </button>\n\n                        <Collapse isOpen={isOpen9}>\n\n                            <div className='openSlideTmr' >\n\n                                {state.Mlabas.map(title => (\n                                    <div className='cardStyleTmr'>\n                                        <button className='btns' >\n                                            <CardImg src={Salad} alt=\"Card image cap\" />\n                                            <CardTitle className='CardTitle' >{title.split(\" \").slice(0, 4).join(\" \")}</CardTitle>\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </Collapse>\n                    </div>\n\n                    <div className={isOpen10 ? 'open' : 'cards'}>\n                        <button onClick={toggle10} className='btns'>\n                            <img src={Salad} alt=\"Card image cap\" width='200px' className='imgSize' />\n\n                            <p className='titles'>سكاكر</p>\n                        </button>\n\n                        <Collapse isOpen={isOpen10}>\n\n                            <div className='openSlide2' >\n\n                                {state.Skaker.map(title => (\n                                    <div className='cardStyle'>\n                                        <button className='btns' >\n                                            <CardImg src={Salad} alt=\"Card image cap\" />\n                                            <CardTitle className='CardTitle' >{title.split(\" \").slice(0, 4).join(\" \")}</CardTitle>\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </Collapse>\n                    </div>\n\n                    <div className={isOpen11 ? 'open' : 'cards'}>\n                        <button onClick={toggle11} className='btns'>\n                            <img src={Salad} alt=\"Card image cap\" width='200px' className='imgSize' />\n\n                            <p className='titles'>نوغا فستق</p>\n                        </button>\n\n                        <Collapse isOpen={isOpen11}>\n\n                            <div className='openSlid' >\n\n                                {state.NogaFstk.map(title => (\n                                    <div className='cardStyle'>\n                                        <button className='btns' >\n                                            <CardImg src={Salad} alt=\"Card image cap\" />\n                                            <CardTitle className='CardTitle' >{title.split(\" \").slice(0, 4).join(\" \")}</CardTitle>\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </Collapse>\n                    </div>\n\n                    <div className={isOpen12 ? 'open' : 'cards'}>\n                        <button onClick={toggle12} className='btns'>\n                            <img src={Salad} alt=\"Card image cap\" width='200px' className='imgSize' />\n\n                            <p className='titles'>هريسة اللوز</p>\n                        </button>\n\n                        <Collapse isOpen={isOpen12}>\n\n                            <div className='openSlide4' >\n\n                                {state.HrestAllwz.map(title => (\n                                    <div className='cardStyle4'>\n                                        <button className='btns' >\n                                            <CardImg src={Salad} alt=\"Card image cap\" />\n                                            <CardTitle className='CardTitle' >{title.split(\" \").slice(0, 4).join(\" \")}</CardTitle>\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                        </Collapse>\n                    </div>\n\n                    {/* <div className={isOpen13 ? 'open' : 'cards'}>\n                        <button onClick={toggle13} className='btns'>\n                            <img src={Salad} alt=\"Card image cap\" width='200px' className='imgSize' />\n\n                            <p className='titles'> وايفرز</p>\n                        </button>\n\n                        <Collapse isOpen={isOpen13}>\n\n                            <div className='openSlide3' >\n\n                                {state.Wifers.map(title => (\n                                    <div className='cardStyle'>\n                                        <CardImg src={Salad} alt=\"Card image cap\" />\n                                        <CardTitle className='CardTitle'>{title}</CardTitle>\n                                        <Button className='btn-dark bg-dark'>select</Button>\n                                    </div>\n                                ))}\n                            </div>\n                        </Collapse>\n                    </div> */}\n                </section>\n            </div>\n\n            {/* Footer */}\n            <div color=\"dark\" expand=\"md\" className='footer'>\n                <a href='https://www.facebook.com/'>  <FontAwesomeIcon icon={faFacebookSquare} color=\"#1777F2\" /> </a>\n                <a href='https://www.twitter.com/'>  <FontAwesomeIcon icon={faTwitter} color=\"#33a7f4\" /> </a>\n                <a href='https://www.instagram.com/'>   <FontAwesomeIcon icon={faInstagram} color=\"#CA5191\" /> </a>\n                <a href='https://www.youtube.com/'>   <FontAwesomeIcon icon={faYoutube} color=\"#e5162f\" /> </a>\n            </div>\n        </div>\n    )\n}\n\n","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faInstagram,\n    faTwitter,\n    faFacebookSquare,\n    faYoutube,\n} from '@fortawesome/free-brands-svg-icons';\nimport { Link } from 'react-router-dom';\n\nexport default function About() {\n    return (\n        <div>\n            {/* Header */}\n            <div className=' headers '>\n\n                <Link to=\"/\" style={{ textDecoration: 'none' }} className='navs' >Home</Link>\n\n                <Link to=\"/shop\" style={{ textDecoration: 'none' }} className='navs' >shop</Link>\n\n                <Link to=\"/about\" style={{ textDecoration: 'none' }} className='navs' className='active'>about</Link>\n\n                <Link to=\"/contact\" style={{ textDecoration: 'none' }} className='navs'>contact</Link>\n\n            </div>\n            <h1>About</h1>\n\n            {/* Footer */}\n            <div color=\"dark\" expand=\"md\" className='footer'>\n                <a href='https://www.facebook.com/'>  <FontAwesomeIcon icon={faFacebookSquare} color=\"#1777F2\" /> </a>\n                <a href='https://www.twitter.com/'>  <FontAwesomeIcon icon={faTwitter} color=\"#33a7f4\" /> </a>\n                <a href='https://www.instagram.com/'>   <FontAwesomeIcon icon={faInstagram} color=\"#CA5191\" /> </a>\n                <a href='https://www.youtube.com/'>   <FontAwesomeIcon icon={faYoutube} color=\"#e5162f\" /> </a>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faInstagram,\n    faTwitter,\n    faFacebookSquare,\n    faYoutube,\n} from '@fortawesome/free-brands-svg-icons';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\n\nexport default function Contact() {\n    return (\n        <div className='body'>\n            {/* Header */}\n            <div className=' headers '>\n\n                <Link to=\"/\" style={{ textDecoration: 'none' }} className='navs' >Home</Link>\n\n                <Link to=\"/shop\" style={{ textDecoration: 'none' }} className='navs' >shop</Link>\n\n                <Link to=\"/about\" style={{ textDecoration: 'none' }} className='navs'>about</Link>\n\n                <Link to=\"/contact\" style={{ textDecoration: 'none' }} className='navs' className='active'>contact</Link>\n\n            </div>\n            <Form className='form' >\n                <h3 className='contactUs'>Contact us</h3>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                    <Label for=\"exampleEmail\" className=\"mr-sm-2\">Email</Label>\n                    <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"something@idk.cool\" className='input' />\n                </FormGroup>\n                <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n                    <Label className=\"mr-sm-2\">Message</Label>\n                    <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\n                </FormGroup>\n                <button className='contact-btn'>Submit</button>\n            </Form>\n\n            {/* Footer */}\n            <div color=\"dark\" expand=\"md\" className='footer'>\n                <a href='https://www.facebook.com/'>  <FontAwesomeIcon icon={faFacebookSquare} color=\"#1777F2\" /> </a>\n                <a href='https://www.twitter.com/'>  <FontAwesomeIcon icon={faTwitter} color=\"#33a7f4\" /> </a>\n                <a href='https://www.instagram.com/'>   <FontAwesomeIcon icon={faInstagram} color=\"#CA5191\" /> </a>\n                <a href='https://www.youtube.com/'>   <FontAwesomeIcon icon={faYoutube} color=\"#e5162f\" /> </a>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport Home from './Components/Home';\nimport Shop from './Components/Shop'\nimport About from './Components/About'\nimport Contact from './Components/Contact'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/shop' component={Shop} />\n          <Route path='/about' component={About} />\n          <Route path='/contact' component={Contact} />\n        </Switch>\n      </Router >\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/salad.13f06f70.jpg\";"],"sourceRoot":""}